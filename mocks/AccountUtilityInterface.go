// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// AccountUtilityInterface is an autogenerated mock type for the AccountUtilityInterface type
type AccountUtilityInterface struct {
	mock.Mock
}

// EmailValidator provides a mock function with given fields: inputEmail
func (_m *AccountUtilityInterface) EmailValidator(inputEmail string) error {
	ret := _m.Called(inputEmail)

	if len(ret) == 0 {
		panic("no return value specified for EmailValidator")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(inputEmail)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PasswordValidator provides a mock function with given fields: inputPassword
func (_m *AccountUtilityInterface) PasswordValidator(inputPassword string) error {
	ret := _m.Called(inputPassword)

	if len(ret) == 0 {
		panic("no return value specified for PasswordValidator")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(inputPassword)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PhoneNumberValidator provides a mock function with given fields: inputHP
func (_m *AccountUtilityInterface) PhoneNumberValidator(inputHP string) error {
	ret := _m.Called(inputHP)

	if len(ret) == 0 {
		panic("no return value specified for PhoneNumberValidator")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(inputHP)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAccountUtilityInterface creates a new instance of AccountUtilityInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccountUtilityInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccountUtilityInterface {
	mock := &AccountUtilityInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
